// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  password      String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  songs         Song[]    @relation("UserSongs")
  playlists     Playlist[] @relation("UserPlaylists")
  accounts      Account[]
  sessions      Session[]
}

model Song {
  id          String    @id @default(cuid())
  title       String
  artist      String
  duration    Int
  lyrics      String
  audioUrl    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation("UserSongs", fields: [userId], references: [id])
  playlists   PlaylistSong[]
}

model Playlist {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation("UserPlaylists", fields: [userId], references: [id])
  songs       PlaylistSong[]
}

model PlaylistSong {
  id          String    @id @default(cuid())
  playlistId  String
  songId      String
  playlist    Playlist  @relation(fields: [playlistId], references: [id])
  song        Song      @relation(fields: [songId], references: [id])
  createdAt   DateTime  @default(now())

  @@unique([playlistId, songId])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?     
  token_type         String?  
  scope              String?  
  id_token           String?  
  session_state      String?  
  user               User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires   DateTime

  @@unique([identifier, token])
} 